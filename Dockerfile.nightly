
## This Dockerfile.cache sets up the nightly compiler, and should not be part of the benchmark

FROM rust:1.33.0 AS bench_rust_nightly

ENV RUST_BACKTRACE 1
ENV RUSTFLAGS "-D warnings"

# Cache cargo dependencies
ENV CARGO_HOME /cache/dockerout/cargo
ENV CARGO_TARGET_DIR /cache/dockerout/target

ENV RUST_VERSION "nightly-2019-05-15"

# Nightly (I dont know why version number doesnt work)
RUN rustup install "$RUST_VERSION"
RUN rustup default "$RUST_VERSION"

#
# Download the dependencies, as the non-docker version caches downloads as well
#

# Copy Cargo file only to compile dependencies in a separate layer
COPY Cargo.toml ./Cargo.toml
COPY Cargo.lock ./Cargo.lock

# Create a dummy main file so compiling dependencies works
RUN mkdir src && printf "fn main() {}" > src/main.rs

# Fetch everything without building
RUN cargo fetch

# Remove all the compiled stuff, only keep downloads
RUN cargo clean --release && cargo clean
RUN rm ./Cargo.toml ./Cargo.lock
